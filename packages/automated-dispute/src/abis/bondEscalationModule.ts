export const bondEscalationModuleAbi = [
    {
        type: "constructor",
        inputs: [{ name: "_oracle", type: "address", internalType: "contract IOracle" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "ORACLE",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IOracle" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "decodeRequestData",
        inputs: [{ name: "_data", type: "bytes", internalType: "bytes" }],
        outputs: [
            {
                name: "_params",
                type: "tuple",
                internalType: "struct IBondEscalationModule.RequestParameters",
                components: [
                    {
                        name: "accountingExtension",
                        type: "address",
                        internalType: "contract IBondEscalationAccounting",
                    },
                    { name: "bondToken", type: "address", internalType: "contract IERC20" },
                    { name: "bondSize", type: "uint256", internalType: "uint256" },
                    {
                        name: "maxNumberOfEscalations",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "bondEscalationDeadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    { name: "tyingBuffer", type: "uint256", internalType: "uint256" },
                    { name: "disputeWindow", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "disputeResponse",
        inputs: [
            {
                name: "_request",
                type: "tuple",
                internalType: "struct IOracle.Request",
                components: [
                    { name: "nonce", type: "uint96", internalType: "uint96" },
                    { name: "requester", type: "address", internalType: "address" },
                    { name: "requestModule", type: "address", internalType: "address" },
                    { name: "responseModule", type: "address", internalType: "address" },
                    { name: "disputeModule", type: "address", internalType: "address" },
                    { name: "resolutionModule", type: "address", internalType: "address" },
                    { name: "finalityModule", type: "address", internalType: "address" },
                    { name: "requestModuleData", type: "bytes", internalType: "bytes" },
                    { name: "responseModuleData", type: "bytes", internalType: "bytes" },
                    { name: "disputeModuleData", type: "bytes", internalType: "bytes" },
                    { name: "resolutionModuleData", type: "bytes", internalType: "bytes" },
                    { name: "finalityModuleData", type: "bytes", internalType: "bytes" },
                ],
            },
            {
                name: "_response",
                type: "tuple",
                internalType: "struct IOracle.Response",
                components: [
                    { name: "proposer", type: "address", internalType: "address" },
                    { name: "requestId", type: "bytes32", internalType: "bytes32" },
                    { name: "response", type: "bytes", internalType: "bytes" },
                ],
            },
            {
                name: "_dispute",
                type: "tuple",
                internalType: "struct IOracle.Dispute",
                components: [
                    { name: "disputer", type: "address", internalType: "address" },
                    { name: "proposer", type: "address", internalType: "address" },
                    { name: "responseId", type: "bytes32", internalType: "bytes32" },
                    { name: "requestId", type: "bytes32", internalType: "bytes32" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "finalizeRequest",
        inputs: [
            {
                name: "_request",
                type: "tuple",
                internalType: "struct IOracle.Request",
                components: [
                    { name: "nonce", type: "uint96", internalType: "uint96" },
                    { name: "requester", type: "address", internalType: "address" },
                    { name: "requestModule", type: "address", internalType: "address" },
                    { name: "responseModule", type: "address", internalType: "address" },
                    { name: "disputeModule", type: "address", internalType: "address" },
                    { name: "resolutionModule", type: "address", internalType: "address" },
                    { name: "finalityModule", type: "address", internalType: "address" },
                    { name: "requestModuleData", type: "bytes", internalType: "bytes" },
                    { name: "responseModuleData", type: "bytes", internalType: "bytes" },
                    { name: "disputeModuleData", type: "bytes", internalType: "bytes" },
                    { name: "resolutionModuleData", type: "bytes", internalType: "bytes" },
                    { name: "finalityModuleData", type: "bytes", internalType: "bytes" },
                ],
            },
            {
                name: "_response",
                type: "tuple",
                internalType: "struct IOracle.Response",
                components: [
                    { name: "proposer", type: "address", internalType: "address" },
                    { name: "requestId", type: "bytes32", internalType: "bytes32" },
                    { name: "response", type: "bytes", internalType: "bytes" },
                ],
            },
            { name: "_finalizer", type: "address", internalType: "address" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getEscalation",
        inputs: [{ name: "_requestId", type: "bytes32", internalType: "bytes32" }],
        outputs: [
            {
                name: "_escalation",
                type: "tuple",
                internalType: "struct IBondEscalationModule.BondEscalation",
                components: [
                    { name: "disputeId", type: "bytes32", internalType: "bytes32" },
                    {
                        name: "status",
                        type: "uint8",
                        internalType: "enum IBondEscalationModule.BondEscalationStatus",
                    },
                    {
                        name: "amountOfPledgesForDispute",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOfPledgesAgainstDispute",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "moduleName",
        inputs: [],
        outputs: [{ name: "_moduleName", type: "string", internalType: "string" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "onDisputeStatusChange",
        inputs: [
            { name: "_disputeId", type: "bytes32", internalType: "bytes32" },
            {
                name: "_request",
                type: "tuple",
                internalType: "struct IOracle.Request",
                components: [
                    { name: "nonce", type: "uint96", internalType: "uint96" },
                    { name: "requester", type: "address", internalType: "address" },
                    { name: "requestModule", type: "address", internalType: "address" },
                    { name: "responseModule", type: "address", internalType: "address" },
                    { name: "disputeModule", type: "address", internalType: "address" },
                    { name: "resolutionModule", type: "address", internalType: "address" },
                    { name: "finalityModule", type: "address", internalType: "address" },
                    { name: "requestModuleData", type: "bytes", internalType: "bytes" },
                    { name: "responseModuleData", type: "bytes", internalType: "bytes" },
                    { name: "disputeModuleData", type: "bytes", internalType: "bytes" },
                    { name: "resolutionModuleData", type: "bytes", internalType: "bytes" },
                    { name: "finalityModuleData", type: "bytes", internalType: "bytes" },
                ],
            },
            {
                name: "",
                type: "tuple",
                internalType: "struct IOracle.Response",
                components: [
                    { name: "proposer", type: "address", internalType: "address" },
                    { name: "requestId", type: "bytes32", internalType: "bytes32" },
                    { name: "response", type: "bytes", internalType: "bytes" },
                ],
            },
            {
                name: "_dispute",
                type: "tuple",
                internalType: "struct IOracle.Dispute",
                components: [
                    { name: "disputer", type: "address", internalType: "address" },
                    { name: "proposer", type: "address", internalType: "address" },
                    { name: "responseId", type: "bytes32", internalType: "bytes32" },
                    { name: "requestId", type: "bytes32", internalType: "bytes32" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "pledgeAgainstDispute",
        inputs: [
            {
                name: "_request",
                type: "tuple",
                internalType: "struct IOracle.Request",
                components: [
                    { name: "nonce", type: "uint96", internalType: "uint96" },
                    { name: "requester", type: "address", internalType: "address" },
                    { name: "requestModule", type: "address", internalType: "address" },
                    { name: "responseModule", type: "address", internalType: "address" },
                    { name: "disputeModule", type: "address", internalType: "address" },
                    { name: "resolutionModule", type: "address", internalType: "address" },
                    { name: "finalityModule", type: "address", internalType: "address" },
                    { name: "requestModuleData", type: "bytes", internalType: "bytes" },
                    { name: "responseModuleData", type: "bytes", internalType: "bytes" },
                    { name: "disputeModuleData", type: "bytes", internalType: "bytes" },
                    { name: "resolutionModuleData", type: "bytes", internalType: "bytes" },
                    { name: "finalityModuleData", type: "bytes", internalType: "bytes" },
                ],
            },
            {
                name: "_dispute",
                type: "tuple",
                internalType: "struct IOracle.Dispute",
                components: [
                    { name: "disputer", type: "address", internalType: "address" },
                    { name: "proposer", type: "address", internalType: "address" },
                    { name: "responseId", type: "bytes32", internalType: "bytes32" },
                    { name: "requestId", type: "bytes32", internalType: "bytes32" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "pledgeForDispute",
        inputs: [
            {
                name: "_request",
                type: "tuple",
                internalType: "struct IOracle.Request",
                components: [
                    { name: "nonce", type: "uint96", internalType: "uint96" },
                    { name: "requester", type: "address", internalType: "address" },
                    { name: "requestModule", type: "address", internalType: "address" },
                    { name: "responseModule", type: "address", internalType: "address" },
                    { name: "disputeModule", type: "address", internalType: "address" },
                    { name: "resolutionModule", type: "address", internalType: "address" },
                    { name: "finalityModule", type: "address", internalType: "address" },
                    { name: "requestModuleData", type: "bytes", internalType: "bytes" },
                    { name: "responseModuleData", type: "bytes", internalType: "bytes" },
                    { name: "disputeModuleData", type: "bytes", internalType: "bytes" },
                    { name: "resolutionModuleData", type: "bytes", internalType: "bytes" },
                    { name: "finalityModuleData", type: "bytes", internalType: "bytes" },
                ],
            },
            {
                name: "_dispute",
                type: "tuple",
                internalType: "struct IOracle.Dispute",
                components: [
                    { name: "disputer", type: "address", internalType: "address" },
                    { name: "proposer", type: "address", internalType: "address" },
                    { name: "responseId", type: "bytes32", internalType: "bytes32" },
                    { name: "requestId", type: "bytes32", internalType: "bytes32" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "pledgesAgainstDispute",
        inputs: [
            { name: "_requestId", type: "bytes32", internalType: "bytes32" },
            { name: "_pledger", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "pledges", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "pledgesForDispute",
        inputs: [
            { name: "_requestId", type: "bytes32", internalType: "bytes32" },
            { name: "_pledger", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "pledges", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "settleBondEscalation",
        inputs: [
            {
                name: "_request",
                type: "tuple",
                internalType: "struct IOracle.Request",
                components: [
                    { name: "nonce", type: "uint96", internalType: "uint96" },
                    { name: "requester", type: "address", internalType: "address" },
                    { name: "requestModule", type: "address", internalType: "address" },
                    { name: "responseModule", type: "address", internalType: "address" },
                    { name: "disputeModule", type: "address", internalType: "address" },
                    { name: "resolutionModule", type: "address", internalType: "address" },
                    { name: "finalityModule", type: "address", internalType: "address" },
                    { name: "requestModuleData", type: "bytes", internalType: "bytes" },
                    { name: "responseModuleData", type: "bytes", internalType: "bytes" },
                    { name: "disputeModuleData", type: "bytes", internalType: "bytes" },
                    { name: "resolutionModuleData", type: "bytes", internalType: "bytes" },
                    { name: "finalityModuleData", type: "bytes", internalType: "bytes" },
                ],
            },
            {
                name: "_response",
                type: "tuple",
                internalType: "struct IOracle.Response",
                components: [
                    { name: "proposer", type: "address", internalType: "address" },
                    { name: "requestId", type: "bytes32", internalType: "bytes32" },
                    { name: "response", type: "bytes", internalType: "bytes" },
                ],
            },
            {
                name: "_dispute",
                type: "tuple",
                internalType: "struct IOracle.Dispute",
                components: [
                    { name: "disputer", type: "address", internalType: "address" },
                    { name: "proposer", type: "address", internalType: "address" },
                    { name: "responseId", type: "bytes32", internalType: "bytes32" },
                    { name: "requestId", type: "bytes32", internalType: "bytes32" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "validateParameters",
        inputs: [{ name: "_encodedParameters", type: "bytes", internalType: "bytes" }],
        outputs: [{ name: "_valid", type: "bool", internalType: "bool" }],
        stateMutability: "pure",
    },
    {
        type: "event",
        name: "BondEscalationStatusUpdated",
        inputs: [
            { name: "_requestId", type: "bytes32", indexed: true, internalType: "bytes32" },
            { name: "_disputeId", type: "bytes32", indexed: true, internalType: "bytes32" },
            {
                name: "_status",
                type: "uint8",
                indexed: false,
                internalType: "enum IBondEscalationModule.BondEscalationStatus",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "DisputeStatusChanged",
        inputs: [
            { name: "_disputeId", type: "bytes32", indexed: true, internalType: "bytes32" },
            {
                name: "_dispute",
                type: "tuple",
                indexed: false,
                internalType: "struct IOracle.Dispute",
                components: [
                    { name: "disputer", type: "address", internalType: "address" },
                    { name: "proposer", type: "address", internalType: "address" },
                    { name: "responseId", type: "bytes32", internalType: "bytes32" },
                    { name: "requestId", type: "bytes32", internalType: "bytes32" },
                ],
            },
            {
                name: "_status",
                type: "uint8",
                indexed: false,
                internalType: "enum IOracle.DisputeStatus",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "PledgedAgainstDispute",
        inputs: [
            { name: "_disputeId", type: "bytes32", indexed: true, internalType: "bytes32" },
            { name: "_pledger", type: "address", indexed: true, internalType: "address" },
            { name: "_amount", type: "uint256", indexed: true, internalType: "uint256" },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "PledgedForDispute",
        inputs: [
            { name: "_disputeId", type: "bytes32", indexed: true, internalType: "bytes32" },
            { name: "_pledger", type: "address", indexed: true, internalType: "address" },
            { name: "_amount", type: "uint256", indexed: true, internalType: "uint256" },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "RequestFinalized",
        inputs: [
            { name: "_requestId", type: "bytes32", indexed: true, internalType: "bytes32" },
            {
                name: "_response",
                type: "tuple",
                indexed: false,
                internalType: "struct IOracle.Response",
                components: [
                    { name: "proposer", type: "address", internalType: "address" },
                    { name: "requestId", type: "bytes32", internalType: "bytes32" },
                    { name: "response", type: "bytes", internalType: "bytes" },
                ],
            },
            {
                name: "_finalizer",
                type: "address",
                indexed: false,
                internalType: "address",
            },
        ],
        anonymous: false,
    },
    {
        type: "event",
        name: "ResponseDisputed",
        inputs: [
            { name: "_requestId", type: "bytes32", indexed: true, internalType: "bytes32" },
            {
                name: "_responseId",
                type: "bytes32",
                indexed: true,
                internalType: "bytes32",
            },
            { name: "_disputeId", type: "bytes32", indexed: true, internalType: "bytes32" },
            {
                name: "_dispute",
                type: "tuple",
                indexed: false,
                internalType: "struct IOracle.Dispute",
                components: [
                    { name: "disputer", type: "address", internalType: "address" },
                    { name: "proposer", type: "address", internalType: "address" },
                    { name: "responseId", type: "bytes32", internalType: "bytes32" },
                    { name: "requestId", type: "bytes32", internalType: "bytes32" },
                ],
            },
            {
                name: "_blockNumber",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
    { type: "error", name: "BondEscalationModule_BondEscalationCantBeSettled", inputs: [] },
    { type: "error", name: "BondEscalationModule_BondEscalationNotOver", inputs: [] },
    { type: "error", name: "BondEscalationModule_BondEscalationOver", inputs: [] },
    { type: "error", name: "BondEscalationModule_CanOnlySurpassByOnePledge", inputs: [] },
    {
        type: "error",
        name: "BondEscalationModule_CannotBreakTieDuringTyingBuffer",
        inputs: [],
    },
    { type: "error", name: "BondEscalationModule_DisputeDoesNotExist", inputs: [] },
    { type: "error", name: "BondEscalationModule_DisputeWindowOver", inputs: [] },
    { type: "error", name: "BondEscalationModule_InvalidDispute", inputs: [] },
    { type: "error", name: "BondEscalationModule_InvalidEscalationParameters", inputs: [] },
    {
        type: "error",
        name: "BondEscalationModule_MaxNumberOfEscalationsReached",
        inputs: [],
    },
    { type: "error", name: "BondEscalationModule_NotEscalatable", inputs: [] },
    { type: "error", name: "BondEscalationModule_ShouldBeEscalated", inputs: [] },
    { type: "error", name: "BondEscalationModule_ZeroValue", inputs: [] },
    { type: "error", name: "Module_OnlyOracle", inputs: [] },
    { type: "error", name: "Validator_InvalidDispute", inputs: [] },
    { type: "error", name: "Validator_InvalidResponse", inputs: [] },
] as const;
